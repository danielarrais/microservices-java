server.port=0
spring.application.name=order-service

# Hosts of services
services.discovery-server=localhost
services.zipkin=localhost
services.db-services=localhost

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${services.db-services}:3306/order-service
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update

eureka.client.serviceUrl.defaultZone=http://eureka:123456@${services.discovery-server}:8761/eureka

# Prometheus Actuator Endpoint
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

#Resilience4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

spring.sleuth.integration.enabled=true
spring.zipkin.base-url=http://${services.zipkin}:9411
spring.sleuth.sampler.probability=1.0

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.json.type.mapping=event:com.danielarrais.orderservice.event.OrderPlacedEvent
spring.kafka.producer.properties.spring.json.add.type.headers=false

